{
  "enabled": true,
  "name": "Design Consistency Guard",
  "description": "Creates a lightweight runtime design consistency hook and provider for the Admin app that detects interactive elements missing proper Subway UI classes and warns in console with fix suggestions",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "apps/admin/app/components/DesignGuardProvider.tsx",
      "apps/admin/app/hooks/useDesignGuard.ts",
      "apps/admin/app/layout.tsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Create the design consistency system for the Admin app:\n\n1. Create `apps/admin/app/components/DesignGuardProvider.tsx` - A React provider component that wraps children and enables the design guard hook when enabled and not in production\n\n2. Create `apps/admin/app/hooks/useDesignGuard.ts` - A lightweight hook (<120 lines) that:\n   - Only runs in non-production environments\n   - Scans document for interactive elements (button, input, select, textarea, a[role=\"button\"])\n   - Uses MutationObserver to track DOM changes\n   - Validates elements have required Subway UI classes (.s-btn, .s-input, .s-select, .s-textarea)\n   - Logs warnings with fix suggestions for missing classes\n   - Supports opt-out via data-allow-unstyled=\"true\" and data-design-guard=\"off\"\n   - De-duplicates warnings using WeakSet\n   - Includes helper function markDesignGuardSilenced()\n   - Guards DOM access with typeof window !== 'undefined'\n\n3. Update `apps/admin/app/layout.tsx` to wrap the root layout with DesignGuardProvider, enabled only in development\n\nThe system should enforce:\n- Buttons must include .s-btn (with optional variants like .s-btn--primary, .s-btn--ghost, .s-btn--sm, .s-btn--md, .s-btn--lg)\n- Inputs must include .s-input\n- Select elements must include .s-select  \n- Textareas must include .s-textarea\n- Links acting as buttons (a[role=\"button\"]) must include .s-btn\n\nInclude JSDoc comments explaining how to mute warnings and ensure SSR safety."
  }
}