{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Listen to source code files in the repository. When changes are detected, analyze the modified code for potential improvements, including code smells, design patterns, and best practices. Generate suggestions for improving code quality while maintaining the existing functionality. Focus on readability, maintainability, and performance optimizations.",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "**/*.ts",
      "**/*.tsx",
      "**/*.js",
      "**/*.jsx",
      "**/*.prisma",
      "**/*.sql"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, duplicate code, complex conditionals, and other anti-patterns\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for TypeScript/JavaScript best practices, React patterns, NestJS conventions, and Prisma optimizations\n4. **Performance**: Look for potential performance bottlenecks and suggest optimizations\n5. **Readability**: Suggest improvements for variable naming, function structure, and code organization\n6. **Maintainability**: Identify areas that could be refactored for better long-term maintenance\n\nFor each suggestion, provide:\n- Clear explanation of the issue\n- Specific code example showing the improvement\n- Reasoning for why the change would be beneficial\n- Impact on readability, maintainability, or performance\n\nConsider the project's tech stack: Next.js, NestJS, TypeScript, Prisma, and Tailwind CSS. Ensure suggestions align with the monorepo structure and existing patterns."
  }
}